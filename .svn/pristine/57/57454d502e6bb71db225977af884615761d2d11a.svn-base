package com.youge.jobfinder;

import java.io.UnsupportedEncodingException;
import java.util.Timer;
import java.util.TimerTask;

import org.apache.http.Header;
import org.apache.http.entity.StringEntity;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import tools.Config;
import tools.HttpClient;

import com.loopj.android.http.AsyncHttpResponseHandler;
import com.nostra13.universalimageloader.core.ImageLoader;

import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.widget.ImageView;
import android.widget.Toast;

public class StartImgActivity extends BaseActivity {

	private String notificationID;
	private String notificationType, notificationoid, notificationcategory,
			notificationwhere, notificationorderState;
	private ImageView guide1;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_start_img);
		guide1 = (ImageView) findViewById(R.id.guide1);

		guidpageHttpClient();

		notificationID = getIntent().getStringExtra("notificationID");
		if (notificationID == null) {
			notificationID = "";
		}
		notificationType = getIntent().getStringExtra("notificationType");
		if (notificationType == null) {
			notificationType = "";
		}
		notificationoid = getIntent().getStringExtra("notificationoid");
		if (notificationoid == null) {
			notificationoid = "";
		}
		notificationcategory = getIntent().getStringExtra(
				"notificationcategory");
		if (notificationcategory == null) {
			notificationcategory = "";
		}
		notificationwhere = getIntent().getStringExtra("notificationwhere");
		if (notificationwhere == null) {
			notificationwhere = "";
		}
		notificationorderState = getIntent().getStringExtra(
				"notificationorderState");
		if (notificationorderState == null) {
			notificationorderState = "";
		}
		Timer timer = new Timer();
		TimerTask task = new TimerTask() {
			@Override
			public void run() {
				initView();
			}
		};
		timer.schedule(task, 3000); // 停留3秒钟.
	}

	private void initView() {
		Intent intent = new Intent(this, MainActivity.class);
		intent.putExtra("notificationID", notificationID);
		intent.putExtra("notificationType", notificationType);
		intent.putExtra("notificationoid", notificationoid);
		intent.putExtra("notificationcategory", notificationcategory);
		intent.putExtra("notificationwhere", notificationwhere);
		intent.putExtra("notificationorderState", notificationorderState);
		startActivity(intent);
		StartImgActivity.this.finish();
	}

	/**
	 * 
	 * 
	 */
	private void guidpageHttpClient() {
		JSONObject job = new JSONObject();
		try {
			StringEntity se = new StringEntity(job.toString());
			HttpClient.post(this, Config.GUIDE_PAGE, se,
					new AsyncHttpResponseHandler() {

						@Override
						public void onSuccess(int arg0, Header[] arg1,
								byte[] arg2) {

							// TODO Auto-generated method stub
							String msg = "";
							if (arg0 == 200) {
								// 将byte 转换 String
								String str = new String(arg2);
								Log.e("rr", "str--" + str);

								try {
									JSONObject job = new JSONObject(str);
									String state = job.getString("state");
									msg = job.getString("msg");
									if (state.equals("success")) {
										JSONObject data = job
												.getJSONObject("data");
										ImageLoader.getInstance().displayImage(
												data.getString("startImg"),
												guide1);
									}
								} catch (JSONException e) {
									// TODO Auto-generated catch block
									e.printStackTrace();
								}
							} else {
								Intent intent = new Intent(
										StartImgActivity.this,
										MainActivity.class);
								startActivity(intent);
								StartImgActivity.this.finish();
								Toast.makeText(StartImgActivity.this, msg,
										Toast.LENGTH_SHORT).show();
							}

						}

						@Override
						public void onFailure(int arg0, Header[] arg1,
								byte[] arg2, Throwable arg3) {
							// TODO Auto-generated method stub
							Intent intent = new Intent(StartImgActivity.this,
									MainActivity.class);
							startActivity(intent);
							StartImgActivity.this.finish();
							Toast.makeText(StartImgActivity.this,
									"网络连接失败，请检测网络！", Toast.LENGTH_SHORT).show();
						}
					});
		} catch (UnsupportedEncodingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}
}
